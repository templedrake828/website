young <- lab6$Shell_Weight[lab6$NumberRings<13]
hist(young, main= "Distribution of Shell Weight for Young", xlab= "Shell Weight", right= F)
hist(old, main= "Distribution of Shell Weight for Adults", xlab= "Shell Weight", right = F)
install.packages("car")
library(car)
young <- lab6$Shell_Weight[lab6$NumberRings<=13]
hist(young, main= "Distribution of Shell Weight for Young", xlab= "Shell Weight", right= F)
old <- lab6$Shell_Weight[lab6$NumberRings>=13]
hist(old, main= "Distribution of Shell Weight for Adults", xlab= "Shell Weight", right = F)
old <- lab6$Shell_Weight[lab6$NumberRings>13]
hist(old, main= "Distribution of Shell Weight for Adults", xlab= "Shell Weight", right = F)
old <- lab6$Shell_Weight[lab6$NumberRings>=13]
hist(old, main= "Distribution of Shell Weight for Adults", xlab= "Shell Weight", right = F)
hist(young, main= "Distribution of Shell Weight for Young", xlab= "Shell Weight", right= F)
young <- lab6$Shell_Weight[lab6$NumberRings<13]
install.packages("car")
hist(young, main= "Distribution of Shell Weight for Young", xlab= "Shell Weight", right= F)
old <- lab6$Shell_Weight[lab6$NumberRings>=13]
hist(old, main= "Distribution of Shell Weight for Adults", xlab= "Shell Weight", right = F)
lab6$old <- lab6$NumberRings>=13
lab6$old <- lab6$NumberRings>=13
lab6$NumberRings>=13
lab6$old <- lab6$NumberRings>=13
lab6$young <- lab6$NumberRings<13
levene.test(Shell_Weight ~ lab6$old, data = lab6)
leveneTest(Shell_Weight ~ lab6$old, data = lab6)
leveneTest(Shell_Weight ~ old, data = lab6)
t.test(Shell_Weight ~ old, data = lab6, alternative = "less", var.equal=T)
data <- read.csv("~/Documents/UT/Biostats/lab7dataset.csv")
View(data)
table(data$Trial)
table(data$Flower_Color)
table(data$Flower_Color[data$Trial == 1])
table(data$Flower_Color[data$Trial == 2])
table(data$Flower_Color[data$Trial == 3])
table(data$Flower_Color[data$Trial == 4])
table(data$Flower_Color[data$Trial == 5])
table(data$Flower_Color[data$Trial == 6])
table(data$Flower_Color[data$Trial == 5])
observed <- table(data$Flower_Color[data$Trial == 5])
prop.table(observed)
data <- read.csv("~/Documents/UT/Biostats/lab7dataset.csv")
View(data)
trial4 <- table(data$Flower_Color[data$Trial == 4])
trial4
barplot(trial4, main= "Counts of Snapdragon FLower Colors", xlab = "FLower Colors", ylab = "Frequency", col = "grey", ylim= c(0,25))
barplot(trial4, main= "Counts of Snapdragon Flower Colors", xlab = "FLower Colors", ylab = "Frequency", col = "grey", ylim= c(0,25))
chisq.test(trial4, p = c(1/4, 2/4, 1/4))$expected
chisq.test(trail4, p = c(1/4, 2/4, 1/4))
chisq.test(trial4, p = c(1/4, 2/4, 1/4))
chisq.test(trial4, p = c(2/4, 1/4, 1/4))$expected
chisq.test(trial4, p = c(2/4, 2/4, 1/4))
chisq.test(trial4, p = c(2/4, 1/4, 1/4))
prop.table(trial4)
prop.table(trial4, p = c(2/4, 1/4, 1/4))$expected
lab8dataset <- read.csv("~/Documents/UT/Biostats/lab8dataset.csv")
View(lab8dataset)
View(lab8dataset)
data <- read.csv("~/Documents/UT/Biostats/lab8dataset.csv")
View(data)
malig <- data$Malig == "Yes"
table(data$Malig)
table(data$Albumin)
table(data$Malig, data$Albumin)
table <- table(data$Malig, data$Albumin)
prop.table(table, 1)
prop.table(table, 2)
table2 <- table(data$Malig, data$Albumin, data$Hemoglobin)
table2
prop.table(table2, 1)
lab8 <- read.csv("~/Documents/UT/Biostats/lab8dataset.csv")
View(lab8)
table <- table(lab8$Age_Group, lab8$Malig)
table
prop.table(table, 1)
barplot(table, beside=T, legend=T, main= "Age Group & Presence of Malignancy", xlab= "Age Group", ylab= "Frequency")
table <- table(lab8$Malig, lab8$Age_Group)
table
prop.table(table, 1)
prop.table(table, 2)
barplot(table, beside=T, legend=T, main= "Age Group & Presence of Malignancy", xlab= "Age Group", ylab= "Frequency")
barplot(table, beside=T, legend=T, main= "Age Group & Presence of Malignancy", xlab= "Age Group", ylab= "Frequency", xlim=c(0,3.5))
barplot(table, beside=T, legend=T, main= "Age Group & Presence of Malignancy", xlab= "Age Group", ylab= "Frequency")
barplot(prop.table(table,2), legend=T, xlim=c(0,3.5), main= "Age Group & Presence of Malignancy", xlab= "Age Group", ylab= "Relative Frequency")
barplot(prop.table(table,2), legend=T, xlim=c(0,4.5), main= "Age Group & Presence of Malignancy", xlab= "Age Group", ylab= "Relative Frequency")
barplot(prop.table(table,2), legend=T, xlim=c(0,5.5), main= "Age Group & Presence of Malignancy", xlab= "Age Group", ylab= "Relative Frequency")
chisq.test(table)$expected
chisq.test(table, correct=F)
library(car)
install.packages(car)
tdd683 <- Cowles
View(tdd683)
table <- table(tdd683$sex, tdd683$volunteer)
table
prop.table(table, 2)
chisq.test(table)expected
chisq.test(table)$expected
chisq.test(table, correct=F)
lab9dataset <- read.csv("~/Documents/UT/Biostats/lab9dataset.csv")
View(lab9dataset)
texas <- lab9dataset$Abdomen_length_mm[lab9dataset$Island == "TEX"]
hawaii <- lab9dataset$Abdomen_length_mm[lab9dataset$Island == "HAW"]
length(texas)
length(hawaii)
median(hawaii)
texas <- lab9dataset$Wing_centroid_pixels[lab9dataset$Island == "TEX"]
hawaii <- lab9dataset$Wing_centroid_pixels[lab9dataset$Island == "HAW"]
median(hawaii)
median(texas)
length(texas)
length(hawaii)
lab9dataset <- read.csv("~/Documents/UT/Biostats/lab9dataset.csv")
View(lab9dataset)
data <- read.csv("~/Documents/UT/Biostats/lab9dataset.csv")
View(data)
male <- data$Abdomen_length_mm[data$Sex == "male"]
female <- data$Abdomen_length_mm[data$Sex == "female"]
length(male)
length(female)
histogram(male)
hist(male)
hist(female)
oahu <- data[data$Island == "OAH"]
oahu <- data[data$Island == "OAH",]
table(oahu$Sex)
wilcox.test(oahu$Abdomen_length_mm ~ oahu$Sex)
library(car)
tdd683 <- Friendly
View(tdd683)
sfr <- tdd683(tdd683$condition == "SFR")
sfr <- tdd683$condition == "SFR"
sfr <- tdd683[tdd683$condition == "SFR", ]
View(sfr)
before <- tdd683[tdd683$condition == "Before", ]
View(before)
table(sfr$correct)
table(before$correct)
data <- tdd683[tdd683$condition == "SFR", tdd683$condition == "Before",]
sfr <- tdd683$correct[tdd683$condition == "SFR"]
before <- tdd683$correct[tdd683$condition == "Before"]
length(sfr)
length(before)
wilcox.test(sfr,before)
data <- read.csv("~/Documents/UT/Biostats/lab10dataset.csv")
View(data)
plot(data$Weight,data$Height)
plot(data$Height, data$Weight)
plot(data$Height, data$Weight, xlim=c(50,100))
plot(data$Height, data$Weight, xlim=c(60,80))
cor(data$Chest, data$Abdomen)
mymodel <- lm(Abdomen ~ Chest, data = data)
qqnorm(mymodel$residuals)
qqline(mymodel$residuals, col "red")
qqline(mymodel$residuals, col = "red")
summary(mymodel)
cor(data$Height, data$weight)
cor(data$Height, data$Weight)
data <- read.csv("~/Documents/UT/Biostats/lab10dataset.csv")
View(data)
plot(data$Age, data$Percent, main = "Age vs. Precent Body Fat", xlab= "Age", ylab= "Precent Body Fat", pch=20)
cor(data$Age, data$Percent)
mymodel <- lm(Precent ~ Age, data = data)
mymodel <- lm(Precent ~ Age, data = data)
mymodel <- lm(Percent ~ Age, data = data)
qqnorm(mymodel$residuals, main = " QQ-plot pf Model Residual")
qqline(mymodel$residuals, col="red")
plot(mymodel$fitted.values, mymodel$residuals, xlab="Fitted Values", ylab="Residuals", pch=20)
abline(h=0, col="red")
plot(mymodel$fitted.values, mymodel$residuals, main="Residual Plot", xlab="Fitted Values", ylab="Residuals", pch=20)
abline(h=0, col="red")
summary(mymodel)
plot(data$Age, data$Percent, main = "Age vs. Precent Body Fat", xlab= "Age", ylab= "Precent Body Fat", pch=20)
abline(mymodeal, col="blue")
abline(mymodel, col="blue")
data <- read.csv("~/Documents/UT/Biostats/researchproject.csv")
View(data)
hist(data$Trash.Count)
west <- data[data$Location == "West"]
west <-data$Location == "West"
west <- data$Trash.Count[data$Location == "West"]
on <- data$Trash.Count[data$Location == "On"]
south <- data$Trash.Count[data$Location == "South"]
hist(west)
hist(on)
hist(south)
weekday <- data$Trash.Count[data$Time == "weekday"]
weekend <- data$Trash.Count[data$Time == "weekend"]
hist(weekday)
hist(weekend)
location <- data$Trash.Count[data$Location]
hist(data)
hist(data$Trash.Count)
qqnorm(data$Trash.Count)
qqline(data$Trash.Count, col= "red")
transform(data$Trash.Count)
trashcount <- log10(data$Trash.Count)
hist(trashcount)
trashcount <- log(data$Trash.Count)
hist(trashcount)
trashcount <- exp(data$Trash.Count)
hist(trashcount)
trashcount <- sqrt(data$Trash.Count)
hist(trashcount)
trashcount <- sin(data$Trash.Count)
hist(trashcount)
trashcount <- asin(data$Trash.Count)
hist(trashcount)
trashcount <- (data$Trash.Count)^3
hist(trashcount)
trashcount <- (data$Trash.Count)^(1/3)
hist(trashcount)
qqnorm(trashcount)
qqline(trashcount, col="red")
qqline(data$Trash.Count, col= "red")
qqnorm(data$Trash.Count)
qqline(data$Trash.Count, col= "red")
trashcount <- 1/(data$Trash.Count)
hist(trashcount)
trashcount <- log(data$Trash.Count)
hist(trashcount)
qqnorm(trashcount)
qqline(trashcount, col="red")
hist(data$Trash.Count)
hist(data$Trash.Count, right = F)
hist(west, right = F)
hist(on, right = F)
hist(south, right = F)
hist(south)
hist(data$Trash.Count, right = F)
hist(data$Trash.Count, right = F, breaks = 20)
hist(data$Trash.Count, right = F, breaks = 15)
plot(data$Trash.Count)
boxplot(data$Trash.Count)
median(data$Trash.Count)
mean(data$Trash.Count)
sd(data$Trash.Count)
fivenum(data$Trash.Count)
hist(data$Trash.Count, right = F, breaks = 15)
hist(data$Trash.Count, right = F)
hist(data$Trash.Count, right = F, breaks=10)
boxplot(data$Trash.Count)
hist(data$Trash.Count, right = F, breaks=10)
hist(data$Trash.Count, main= "Distribution of Trash", xlab= "Number of Trash Counted", right = F, breaks=10)
boxplot(data$Trash.Count, ylab= "Number of Trash Counted", main= "Distirbution of Trash")
boxplot(data$Trash.Count ~ data$Location, ylab= "Number of Trash Counted", main= "Trash Distribution of Each Location", col= c("light blue", "light green", "light pink"))
west <- data[data$Location == "West"]
west <- data$Trash.Count[data$Location == "West"]
mean(west)
sd(west)
mean(on)
sd(on)
mean(south)
sd(south)
boxplot(data$Trash.Count ~ data$Time, ylab= "Number of Trash Counted", main= "Trash Distribution of Time", col= c("light yellow", "light orange"))
boxplot(data$Trash.Count ~ data$Time, ylab= "Number of Trash Counted", main= "Trash Distribution of Time", col= c("light yellow", "grey"))
mean(weekday)
sd(weekday)
mean(weekend)
sd(weekday)
qqnorm(data$Trash.Count)
qqline(data$Trash.Count, col= "red")
Lab11 <- read.csv("~/Documents/UT/Biostats/lab11dataset.csv")
View(Lab11)
anova <- lm(bwt ~ smoke, data = Lab11)
Anova(anova, type=3)
anova(anova, type=3)
Anova(anova, type=3)
my_anova <- lm(bwt ~ smoke, data = Lab11)
Anova(my_anova, type=3)
anova(my_anova, type=3)
Anova(my_anova, type=3)
library(car)
Anova(my_anova, type=3)
View(data)
View(data)
dataset <- read.csv("~/Documents/UT/Biostats/lab11dataset.csv")
View(dataset)
boxplot(bwt ~ ui, data = dataset, xlab = "Urinary Irritation Status", ylab = "Birth Weight (g)", main = "Birth Weight by Urinary Irritation", col = c(b"blue", "yellow"))
boxplot(bwt ~ ui, data = dataset, xlab = "Urinary Irritation Status", ylab = "Birth Weight (g)", main = "Birth Weight by Urinary Irritation", col = c("blue", "yellow"))
boxplot(bwt ~ ui, data = dataset, xlab = "Urinary Irritation Status", ylab = "Birth Weight (g)", main = "Birth Weight by Urinary Irritation", col = c("light blue", "light pink"))
boxplot(bwt ~ ui, data = dataset, xlab = "Urinary Irritation Status", ylab = "Birth Weight (g)", main = "Birth Weight by Urinary Irritation", col = c("dark cyan", "orange"))
leveneTest(bwt ~ ui, data = dataset)
library(car)
leveneTest(bwt ~ ui, data = dataset)
boxplot(bwt ~ ui, data = dataset, xlab = "Presence of Urinary Irritation", ylab = "Birth Weight (g)", main = "Birth Weight by Urinary Irritation", col = c("dark cyan", "orange"))
multi_anova <- lm(bwt ~ ui + smoke, data = dataset)
Anova(multi_anova, type = 3)
summary(multi_anova)$adj.r.squared
multi_anova <- lm(bwt ~ ui * smoke, data = dataset)
Anova(multi_anova, type = 3)
summary(multi_anova)$adj.r.squared
library(car)
tdd683 <- Salaries
View(tdd683)
scatterplot(salary ~ yrs.since.phd, data = tdd683)
plot(tdd683$yrs.since.phd, tdd683$salary, main = "Salary vs. Years Since PhD", xlab = "Time (yrs)", ylab = "Salary ($)", pch=20)
cor.test(tdd683$yrs.since.phd, tdd683$salary)
my_anova <- lm(salary ~ yrs.since.phd, data = tdd683)
anova(my_anova, type=3)
my_model <- lm(salary ~ yrs.since.phd, data = tdd683)
qqnorm(my_model$residuals, main = "QQ-plot of Model Residuals")
qqline(my_model$residuals, col = "red")
plot(my_model$fitted.values, my_model$residuals, x-lab = "Fitted Values", y-lab = "Residuals", pch=20)
plot(my_model$fitted.values, my_model$residuals, x-lab = "Fitted Values", y-lab = "Residuals", pch=20))
plot(my_model$fitted.values, my_model$residuals, xlab = "Fitted Values", ylab = "Residuals", pch=20))
plot(my_model$fitted.values, my_model$residuals, xlab = "Fitted Values", ylab = "Residuals", pch=20))
plot(my_model$fitted.values, my_model$residuals, xlab = "Fitted Values", ylab = "Residuals", pch=20)
abline(h=0, col= "red")
summary(my_model)
my_model <- lm(yrs.since.phd ~ salary, data = tdd683)
qqnorm(my_model$residuals, main = "QQ-plot of Model Residuals")
qqline(my_model$residuals, col = "red")
plot(my_model$fitted.values, my_model$residuals, xlab = "Fitted Values", ylab = "Residuals", pch=20)
abline(h=0, col= "red")
summary(my_model)
my_model <- lm(salary ~ yrs.since.phd, data = tdd683)
qqnorm(my_model$residuals, main = "QQ-plot of Model Residuals")
qqline(my_model$residuals, col = "red")
plot(my_model$fitted.values, my_model$residuals, xlab = "Fitted Values", ylab = "Residuals", pch=20)
abline(h=0, col= "red")
summary(my_model)
lab12 <- read.csv("~/Documents/UT/Biostats/lab12dataset.csv")
View(lab12)
mymodel <- lm(lab12$FL~lab12$RW)
summary(mymodel)
dataset <- read.csv("~/Documents/UT/Biostats/lab12dataset.csv")
View(dataset)
mymodel <- lm(FL~Sex+Color+CW, data = dataset)
mymodel <- lm(FL~Sex+Color+CW, data = dataset)
plot(dataset$Cw, dataset$FL, xlab="Crab Carapace Width (mm)", ylab="Crab Frontal Lobe SIze (mm)", main="Crab Carapace Width and Frontal Lobe Size", pch=20)
plot(dataset$CW, dataset$FL, xlab="Crab Carapace Width (mm)", ylab="Crab Frontal Lobe SIze (mm)", main="Crab Carapace Width and Frontal Lobe Size", pch=20)
hist(mymodel$residuals, main="Model Residuals", xlab="Residual", col="light grey", right=F)
plot(mymodel$fitted.values, mymodel$residuals, xlab="Fitted Values", ylab="Residuals", main="Residual Plot", pch=20)
abline(h=0, col="red")
summary(mymodel)
library(car)
tdd683 <- Robey
View(tdd683)
myanova <- lm(tfr ~ region + contraception, data = tdd683)
myanova <- lm(tfr ~ region + contraceptors, data = tdd683)
Anova(myanova, type=3)
summary(myanova)$adj.r.squared
mymodel <- lm(tfr ~ region + contraceptor, data = tdd683)
mymodel <- lm(tfr ~ region + contraceptors, data = tdd683)
summary(mymodel)
myanova <- lm(tfr ~ region*contraceptors, data = tdd683)
Anova(myanova, type=3)
summary(myanova)$adj.r.squared
mymodel <- lm(tfr ~ region*contraceptors, data = tdd683)
summary(mymodel)
data
View(data)
leveneTest(Trash.Count ~ Location, datat= data)
leveneTest(Trash.Count ~ Location, data= data)
library(car)
leveneTest(Trash.Count ~ Location, data= data)
mymodel <- lm(Trash.Count~Location*Time, data = data)
summary(mymodel)
mymodel <- lm(Trash.Count~Location*Time, data = data, dummy(Location,"West"))
summary(mymodel)
Location <- relevel(Location, ref= "West")
table(Location)
table(location)
location <- relevel(location, ref= "West")
Location <- relevel(location, ref= "West")
class(location)
Location <- relevel(dta$Location, ref= "West")
Location <- relevel(data$Location, ref= "West")
table(location)
table(Location)
class(Location)
mymodel <- lm(Trash.Count~Location*Time, data = data, dummy(Location,"West"))
mymodel <- lm(Trash.Count~Location*Time, data = data))
mymodel <- lm(Trash.Count~Location*Time, data = data)
summary(mymodel)
Location <- relevel(data$Location, ref= "West")
summary(mymodel)
Location <- relevel(data$Location, ref= "West")
mymodel <- lm(Trash.Count~Location*Time, data = data)
summary(mymodel)
install.packages("gplots")
library(gplots)
plotmeans(Trash.Count~Location, data = weekday, n.label=F, col = "black", barcol= "black", pch20, main = "Trash Count by Location and Time", ylab= "Pieces of Trash Counted", ylim=c(0,200), xlab="Location"
plotmeans(Trash.Count~Location, data=weekend, n.label=F, add = T, col="red", barcol="red", pch=20)
plotmeans(Trash.Count~Location, data = weekday, n.label=F, col = "black", barcol= "black", pch=20, main = "Trash Count by Location and Time", ylab= "Pieces of Trash Counted", ylim=c(0,200), xlab="Location"
plotmeans(Trash.Count~Location, data = weekday, n.label=F, col = "black", barcol= "black", pch=20, main = "Trash Count by Location and Time", ylab= "Pieces of Trash Counted", ylim=c(0,200), xlab="Location")
plotmeans(Trash.Count~Location, data = weekday, n.label=F, col = "black", barcol= "black", pch=20, main = "Trash Count by Location and Time", ylab= "Pieces of Trash Counted", ylim=c(0,200), xlab="Location")
plotmeans(Trash.Count~Location, data = weekday, n.label=F, col = "black", barcol= "black", pch=20, main = "Trash Count by Location and Time", ylab= "Pieces of Trash Counted", ylim=c(0,200), xlab="Location")
plotmeans(Trash.Count~Location, data=weekend, n.label=F, add = T, col="red", barcol="red", pch=20)
plotmeans(Trash.Count~Location, data = weekday, n.label=F, col = "black", barcol= "black", pch=20, main = "Trash Count by Location and Time", ylab= "Pieces of Trash Counted", ylim=c(0,200), xlab="Location")
plotmeans(Trash.Count~Location, data=weekend, n.label=F, add = T, col="red", barcol="red", pch=20)
legend("bottomright", inset=0.01, title= "Time:", c("weekday","weekend"), fill=c("black","red", cex=0.8)
plotmeans(Trash.Count~Location, data = weekday, n.label=F, col = "black", barcol= "black", pch=20, main = "Trash Count by Location and Time", ylab= "Pieces of Trash Counted", ylim=c(0,200), xlab="Location"
plotmeans(Trash.Count~Location, data=weekend, n.label=F, add = T, col="red", barcol="red", pch=20)
legend("bottomright", inset=0.01, title= "Time:", c("weekday","weekend"), fill=c("black","red", cex=0.8)
library(gplots)
library(gplots)
plotmeans(Trash.Count~Location, data = weekday, n.label=F, col = "black", barcol= "black", pch=20, main = "Trash Count by Location and Time", ylab= "Pieces of Trash Counted", ylim=c(0,200), xlab="Location")
plotmeans(Trash.Count~Location, data=weekend, n.label=F, add = T, col="red", barcol="red", pch=20)
legend("bottomright", inset=0.01, title= "Time:", c("weekday","weekend"), fill=c("black","red"), cex=0.8)
library(car)
install.packages("gplots")
library(gplots)
plotmeans(Trash.Count~Location, data = weekday, n.label=F, col = "black", barcol= "black", pch=20, main = "Trash Count by Location and Time", ylab= "Pieces of Trash Counted", ylim=c(0,200), xlab="Location")
my_anova <- lm(Trash.Count~Location*Time, data=data)
Anova(my_anova, type=3)
summary(my_model)$adj.r.squared
summary(my_anova)$adj.r.squared
library(gplots)
plotmeans(Trash.Count~Location,data=weekday,n.label=F,col="black",barcol="black",pch=20,main="Trash Count by Location and Time",ylab="Pieces of Trash Counted",ylim=(o,200),xlan="Location")
plotmeans(Trash.Count~Location,data=weekday,n.label=F,col="black",barcol="black",pch=20,main="Trash Count by Location and Time",ylab="Pieces of Trash Counted",ylim=(0,200),xlan="Location")
plotmeans(Trash.Count~Location,data=weekday,n.label=F,col="black",barcol="black",pch=20,main="Trash Count by Location and Time",ylab="Pieces of Trash Counted",ylim=c(0,200),xlan="Location")
plotmeans(Trash.Count~Location,data=weekday,n.label=F,col="black",barcol="black",pch=20,main="Trash Count by Location and Time",ylab="Pieces of Trash Counted",ylim=c(0,200),xlab="Location")
weekday <- trashcount[trashcount$Time=="weekday"]
weekday <- Trash.Count[Trash.Count$Time=="weekday"]
weekday <- data[data$Time=="weekday"]
weekday <- data[data$Time=="weekday",]
weekend <- data[data$Time=="weekend",]
library(gplots)
plotmeans(Trash.Count~Location,data=weekday,n.label=F,col="black",barcol="black",pch=20,main="Trash Count by Location and Time",ylab="Pieces of Trash Counted",ylim=c(0,200),xlab="Location")
my_model <- lm(Trash.Count~Location*Time,data=data)
my_model <- lm(Trash.Count~Location*Time,data=data)
summary(my_model)
weekday <- data[data$Time=="weekday",]
weekend <- data[data$Time=="weekend",]
library(gplots)
plotmeans(Trash.Count~Location,data=weekday,n.label=F,col="black",barcol="black",pch=20,main="Trash Count by Location and Time",ylab="Pieces of Trash Counted",ylim=c(0,200),xlab="Location")
plotmeans(Trash.Count~Location,data=weekend,n.label=F,add=T,col="red",barcol="red",pch=20)
legend("bottomright",inset=0.01,title="Time:",c("weekday","weekend"),fill=c("black","red"),cex=0.8)
my_anova <- lm(Trash.Count~Location*Time,data=data)
library(car)
my_anova <- lm(Trash.Count~Location*Time,data=data)
Anova(my_anova,type=3)
library(gplots)
plotmeans(Trash.Count~Location,data=weekday,n.label=F,col="black",barcol="black",pch=20,main="Trash Count by Location and Time",ylab="Pieces of Trash Counted",ylim=c(0,200),xlab="Location")
plotmeans(Trash.Count~Location,data=weekend,n.label=F,add=T,col="red",barcol="red",pch=20)
legend("bottomright",inset=0.01,title="Time:",c("weekday","weekend"),fill=c("black","red"),cex=0.8)
leveneTest(Trash.Count~Location, data=data)
leveneTest(Trash.Count~Time, data=data)
Lab5_health <- read.csv("~/Downloads/Lab5_health.csv")
View(Lab5_health)
mydata <- Lab5_health
t.test(mydata$Albumin, mu=3.4)
t.test(mydata$WhiteBC, mu=3500)
t.test(mydata$WhiteBC, mu=3500, alternative='greater')
lab6 <- read.csv("~/Documents/UT/Biostats/Lab 6/lab6dataset.csv")
View(lab6)
acupuncture <- lab6[lab6$group=='Acupuncture',]
t.test(acupuncture$severity_baseline,acupuncture$severity_12m, paired=T, alternative='greater')
t.test(acupuncture$severity_baseline,acupuncture$severity_12m, paired=T)
lab6 <- read.csv("~/Downloads/Lab6_acupuncture.csv", header=FALSE)
View(lab6)
acupuncture <- lab6[lab6$group=='Acupuncture',]
t.test(acupuncture$severity_baseline,acupuncture$severity_12m, paired=T, alternative='greater')
View(lab6)
acupuncture <- lab6[lab6$group=='Acupuncture',]
t.test(acupuncture$severity_baseline,acupuncture$severity_12m, paired=T, alternative='greater')
View(acupuncture)
baseline <- data1$severity_baseline[data1$group == "Acupuncture"]
baseline <- lab6$severity_baseline[data1$group == "Acupuncture"]
baseline <- lab6$severity_baseline[lab6$group == "Acupuncture"]
acupuncture <- lab6[lab6$group=='Acupuncture',]
View(acupuncture)
acupuncture <- lab6[lab6$group=='Acupuncture', na.mr = TRUE]
acupuncture <- lab6[lab6$group=='Acupuncture',]
View(lab6)
View(acupuncture)
acupuncture <- lab6[lab6$group=='Acupuncture']
View(acupuncture)
acupuncture <- lab6[lab6$group=='Acupuncture',]
acupuncture <- lab6[lab6$group=="Acupuncture",]
View(acupuncture)
acupuncture <- mydata[mydata$group=='Acupuncture',]
acupuncture <- lab6[lab6$group=='Acupuncture',]
control <- lab6[lab6$group=='Control',]
t.test(lab6$freq_diff~lab6$group, var.equal=T, alternative='less')
control <-lab6$freq_diff[lab6$group=="Control"]
control <-lab6$freq_diff[lab6$group=="Control",]
install.packages(car)
acupuncture <- lab6[lab6$V6=="Acupuncture",]
acupuncture <- lab6[lab6$V4=="Acupuncture",]
acupuncture <- lab6[lab6$V4=='Acupuncture',]
control <-lab6$freq_diff[lab6$V4=="Control",]
control <-lab6[lab6$V4=="Control",]
t.test(lab6$V10~lab6$V4, var.equal=T, alternative='less')
t.test(acupuncture$V10~control$V4, var.equal=T, alternative='less')
t.test(lab6$V10~lab6$V4, var.equal=T, alternative='less')
View(acupuncture)
install.packages("blogdown")
blogdown::new_site(theme="nurlansu/hugo-sustain")
install.packages(c("lmtest", "plotROC", "sandwich"))
library(lmtest)
library(sandwich)
library(tidyr)
library(tidyr)
library(ggplot2)
library(plotROC)
library(glmnet)
opts_chunk$set(fig.align="center", fig.height=5, message=FALSE, warning=FALSE, fig.width=8, tidy.opts=list(width.cutoff=60),tidy=TRUE)
knitr::opts_chunk$set(fig.align="center", fig.height=5, message=FALSE, warning=FALSE, fig.width=8, tidy.opts=list(width.cutoff=60),tidy=TRUE)
blogdown::serve_site()
setwd("/Users/templedavies/Desktop/website")
blogdown::serve_site()
install.packages("lmtest")
install.packages("CRAN")
setRepositories()
available.packages()
ap <- available.packages()
ap <- available.packages()
View(ap)
install.packages("AER")
install.packages("lmtest")
